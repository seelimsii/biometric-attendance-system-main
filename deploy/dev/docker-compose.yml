version: '3.8'

services:
  nginx:
    image: nginx:1.25
    container_name: nginx_proxy
    ports:
      - "${NGINX_FASTAPI_PORT}:5000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - fastapi
    labels:
      logging: promtail
      logging_job_name: nginx

  mssql:
    image: mcr.microsoft.com/mssql/server
    container_name: mssql_server
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${DB_PASSWORD}
      - MSSQL_DB_NAME=${DB_NAME}
    ports:
      - "${DB_PORT_EXTERNAL}:1433"
    volumes:
      - ${PWD}/mssql/data:/var/opt/mssql/data
      - ${PWD}/mssql/log:/var/opt/mssql/log
      - ${PWD}/mssql/scripts:/scripts
    labels:
      logging: promtail
      logging_job_name: mssql

  fastapi:
    image: fastapi
    deploy:
      replicas: 4
    environment:
      - API_CONFIG_ENVIRONMENT=dev
    env_file:
      - ./environments/.env.fastapi
    volumes:
      - ./shared/fastapi:/home/appuser/shared
    depends_on:
      - mssql
    restart: unless-stopped
    labels:
      logging: promtail
      logging_job_name: fastapi

  react:
    image: react
    container_name: react_server
    ports:
      - "${REACT_PORT}:6000"
    volumes:
      - ./shared/nginx2/cache:/usr/src/app/cache
    depends_on:
      - fastapi
    labels:
      logging: promtail
      logging_job_name: react

  grafana:
    image: grafana/grafana
    container_name: grafana_server
    user: "0"
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - ./shared/grafana:/var/lib/grafana
    restart: unless-stopped
    labels:
      logging: promtail
      logging_job_name: grafana

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer_server
    ports:
      - "${PORTAINER_PORT}:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./shared/portainer:/data
    restart: unless-stopped
    labels:
      logging: promtail
      logging_job_name: portainer

  node_exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    labels:
      logging: promtail
      logging_job_name: node_exporter

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_server
    user: "0"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./shared/prometheus:/prometheus
    depends_on:
      - fastapi
    restart: unless-stopped
    labels:
      logging: promtail
      logging_job_name: prometheus

  promtail:
    image: grafana/promtail:latest
    container_name: promtail_server
    restart: unless-stopped
    command:
      - "-config.file=/etc/promtail/promtail-config.yaml"
      - "-config.expand-env=true"
    volumes:
      - ./promtail-config.yaml:/etc/promtail/promtail-config.yaml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      logging: promtail
      logging_job_name: promtail

  loki:
    image: grafana/loki:latest
    container_name: loki_server
    command:
      - "-config.file=/etc/loki/loki-config.yaml"
    restart: unless-stopped
    user: "0"
    volumes:
      - ./loki-config.yaml:/etc/loki/loki-config.yaml
      - ./shared/loki:/loki
    depends_on:
      - promtail
